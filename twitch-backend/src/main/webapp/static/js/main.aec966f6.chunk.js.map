{"version":3,"sources":["utils.js","components/Login.js","components/Register.js","components/Favorites.js","components/CustomSearch.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["SERVER_ORIGIN","loginUrl","login","credential","fetch","method","headers","credentials","body","JSON","stringify","then","response","console","log","status","Error","json","registerUrl","register","data","logoutUrl","logout","topGamesUrl","getTopGames","getGameDetailsUrl","searchGameByIdUrl","searchGameById","gameId","searchGameByName","gameName","getGameDetails","id","favoriteItemUrl","getFavoriteItem","getRecommendedItemsUrl","getRecommendations","Login","state","displayModel","signinOnClick","setState","handleCancel","onFinish","value","message","success","name","props","onSuccess","catch","err","error","this","shape","onClick","style","marginRight","title","visible","onCancel","footer","preserve","Item","rules","required","prefix","UserOutlined","className","placeholder","LockOutlined","type","htmlType","Component","Register","signupOnClick","SubMenu","Menu","MenuKey","Favorites","displayDrawer","onDrawerClose","onFavoriteClick","render","VIDEO","STREAM","CLIP","icon","StarFilled","placement","width","onClose","mode","defaultOpenKeys","height","borderRight","selectable","EyeOutlined","map","item","href","url","target","rel","broadcaster_name","YoutubeOutlined","VideoCameraOutlined","React","CustomSearch","displayModal","searchOnClick","onSubmit","game_name","SearchOutlined","marginLeft","marginTop","TabPane","Tabs","tabKeys","renderCardTitle","loggedIn","favs","favOnChange","isFav","find","fav","StarOutlined","favItem","favorite","addFavoriteItem","overflow","textOverflow","renderCardGrid","grid","xs","sm","md","lg","xl","xxl","dataSource","renderItem","alt","src","thumbnail_url","replace","Home","resources","favoriteItems","favoriteOnChange","favVideos","favStreams","favClips","defaultActiveKey","tab","forceRender","Header","Layout","Content","Sider","App","topGames","onGameSelect","key","customSearchOnSuccess","signinOnSuccess","signoutOnClick","componentDidMount","justify","display","onSelect","LikeOutlined","FireOutlined","game","box_art_url","borderRadius","padding","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.aec966f6.chunk.js","sourcesContent":["const SERVER_ORIGIN = ''\n\nconst loginUrl = `${SERVER_ORIGIN}/login`\n\nexport const login = (credential) => {\n    return fetch(loginUrl, {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        credentials: 'include',\n        body: JSON.stringify(credential)\n    }).then((response) => {\n        console.log(response)\n        if (response.status !== 200) {\n            throw Error('Fail to log in')\n        }\n        return response.json()\n    })\n}\n\nconst registerUrl = `${SERVER_ORIGIN}/register`\n\nexport const register = (data) => {\n    return fetch(registerUrl, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to register')\n        }\n    })\n}\n\nconst logoutUrl = `${SERVER_ORIGIN}/logout`\n\nexport const logout = () => {\n    return fetch(logoutUrl, {\n        method: 'POST',\n        credentials: 'include'\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to log out')\n        }\n    })\n}\n\nconst topGamesUrl = `${SERVER_ORIGIN}/game`\n\nexport const getTopGames = () => {\n    return fetch(topGamesUrl).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to get top games')\n        }\n\n        return response.json()\n    })\n}\n\nconst getGameDetailsUrl = `${SERVER_ORIGIN}/game?game_name=`\n\nconst getGameDetails = (gameName) => {\n    return fetch(`${getGameDetailsUrl}${gameName}`).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to find the game')\n        }\n\n        return response.json()\n    })\n}\n\nconst searchGameByIdUrl = `${SERVER_ORIGIN}/search?game_id=`\n\nexport const searchGameById = (gameId) => {\n    return fetch(`${searchGameByIdUrl}${gameId}`).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to find the game')\n        }\n        return response.json()\n    })\n}\n\nexport const searchGameByName = (gameName) => {\n    return getGameDetails(gameName).then((data) => {\n        if (data && data.id) {\n            return searchGameById(data.id)\n        }\n\n        throw Error('Fail to find the game')\n    })\n}\n\nconst favoriteItemUrl = `${SERVER_ORIGIN}/favorite`\n\nexport const addFavoriteItem = (favItem) => {\n    return fetch(favoriteItemUrl, {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        credentials: 'include',\n        body: JSON.stringify({favorite: favItem})\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to add favorite item')\n        }\n    })\n}\n\nexport const deleteFavoriteItem = (favItem) => {\n    return fetch(favoriteItemUrl, {\n        method: 'DELETE',\n        headers: {'Content-Type': 'application/json'},\n        credentials: 'include',\n        body: JSON.stringify({favorite: favItem})\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to delete favorite item')\n        }\n    })\n}\n\nexport const getFavoriteItem = () => {\n    return fetch(favoriteItemUrl, {\n        method: 'GET',\n        credentials: 'include'\n    }).then((response) => {\n        if (response.status !== 200) {\n            console.log(response)\n            throw Error('Fail to get favorite item')\n        }\n        return response.json()\n    })\n}\n\nconst getRecommendedItemsUrl = `${SERVER_ORIGIN}/recommendation`\n\nexport const getRecommendations = () => {\n    return fetch(getRecommendedItemsUrl, {\n        credentials: 'include'\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to get recommended item')\n        }\n        return response.json()\n    })\n}","import React, {Component} from 'react'\nimport {Button, Form, Input, message, Modal} from 'antd'\nimport {LockOutlined, UserOutlined} from '@ant-design/icons'\nimport {login} from '../utils'\n\nclass Login extends Component {\n    state = {\n        displayModel: false\n    }\n\n    render() {\n        const {displayModel} = this.state\n\n        return (\n            <div>\n                <Button shape=\"round\" onClick={this.signinOnClick} style={{marginRight: 20}}>\n                    Login\n                </Button>\n                <Modal title=\"Log In\" visible={displayModel} onCancel={this.handleCancel} footer={null}>\n                    <Form\n                        name=\"normal_login\"\n                        onFinish={this.onFinish}\n                        preserve={false}\n                    >\n                        <Form.Item\n                            name=\"user_id\"\n                            rules={[{required: true, message: 'Please input your Username!'}]}\n                        >\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>} placeholder=\"Username\"/>\n                        </Form.Item>\n                        <Form.Item\n                            name=\"password\"\n                            rules={[{required: true, message: 'Please input your Password!'}]}\n                        >\n                            <Input\n                                prefix={<LockOutlined className=\"site-form-item-icon\"/>}\n                                type=\"password\"\n                                placeholder=\"Password\"\n                            />\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                                Log in\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </div>\n        )\n    }\n\n    signinOnClick = () => {\n        this.setState({displayModel: true})\n    }\n\n    handleCancel = () => {\n        this.setState({displayModel: false})\n    }\n\n    onFinish = (value) => {\n        login(value).then(data => {\n            this.setState({displayModel: false})\n            message.success(`Welcome back, ${data.name}`)\n            this.props.onSuccess()\n        }).catch(err => {\n            message.error(err.message)\n        })\n    }\n}\n\nexport default Login  ","import React, {Component} from 'react'\nimport {Button, Form, Input, message, Modal} from \"antd\"\nimport {LockOutlined, UserOutlined} from \"@ant-design/icons\"\nimport {register} from \"../utils\"\n\nclass Register extends Component {\n    state = {\n        displayModel: false\n    }\n\n    render() {\n        const {displayModel} = this.state\n\n        return (\n            <div>\n                <Button shape=\"round\" type=\"primary\" onClick={this.signupOnClick} style={{marginRight: 20}}>\n                    Register\n                </Button>\n                <Modal title=\"Register\" visible={displayModel} onCancel={this.handleCancel} footer={null}>\n                    <Form\n                        name=\"normal_register\"\n                        onFinish={this.onFinish}\n                        preserve={false}\n                    >\n                        <Form.Item\n                            name=\"user_id\"\n                            rules={[{required: true, message: 'Please input your Username!'}]}\n                        >\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>} placeholder=\"Username\"/>\n                        </Form.Item>\n                        <Form.Item\n                            name=\"password\"\n                            rules={[{required: true, message: 'Please input your Password!'}]}\n                        >\n                            <Input\n                                prefix={<LockOutlined className=\"site-form-item-icon\"/>}\n                                type=\"password\"\n                                placeholder=\"Password\"\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"first_name\"\n                            rules={[{required: true, message: 'Please input your first name!'}]}\n                        >\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>} placeholder=\"firstname\"/>\n                        </Form.Item>\n                        <Form.Item\n                            name=\"last_name\"\n                            rules={[{required: true, message: 'Please input your last name!'}]}\n                        >\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>} placeholder=\"lastname\"/>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                                Log in\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </div>\n        )\n    }\n\n    signupOnClick = () => {\n        this.setState({displayModel: true})\n    }\n\n    handleCancel = () => {\n        this.setState({displayModel: false})\n    }\n\n    onFinish = (value) => {\n        register(value).then(data => {\n            this.setState({displayModel: false})\n            message.success('Register succeed')\n        }).catch(err => {\n            message.error(err.message)\n        })\n    }\n}\n\nexport default Register","import React from 'react'\nimport {Button, Drawer, Menu} from 'antd'\nimport {EyeOutlined, StarFilled, VideoCameraOutlined, YoutubeOutlined} from '@ant-design/icons'\n\nconst {SubMenu} = Menu\nconst MenuKey = {\n    Streams: 'streams',\n    Videos: 'videos',\n    Clips: 'clips'\n}\n\nclass Favorites extends React.Component {\n    state = {\n        displayDrawer: false\n    }\n\n    onDrawerClose = () => {\n        this.setState({displayDrawer: false})\n    }\n\n    onFavoriteClick = () => {\n        this.setState({displayDrawer: true})\n    }\n\n    render = () => {\n        const {VIDEO, STREAM, CLIP} = this.props.data\n\n        return (\n            <div>\n                <Button type=\"primary\" shape=\"round\" onClick={this.onFavoriteClick} icon={<StarFilled/>}>\n                    My Favorites</Button>\n                <Drawer\n                    title=\"My Favorites\"\n                    placement=\"right\"\n                    width={720}\n                    visible={this.state.displayDrawer}\n                    onClose={this.onDrawerClose}\n                >\n                    <Menu\n                        mode=\"inline\"\n                        defaultOpenKeys={[MenuKey.Streams]}\n                        style={{height: '100%', borderRight: 0}}\n                        selectable={false}\n                    >\n                        <SubMenu key={MenuKey.Streams} icon={<EyeOutlined/>} title=\"Streams\">\n                            {\n                                STREAM.map((item) => {\n                                    return (\n                                        <Menu.Item key={item.id}>\n                                            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                {`${item.broadcaster_name} - ${item.title}`}\n                                            </a>\n                                        </Menu.Item>\n                                    )\n                                })\n                            }\n                        </SubMenu>\n                        <SubMenu key={MenuKey.Videos} icon={<YoutubeOutlined/>} title=\"Videos\">\n                            {\n                                VIDEO.map((item) => {\n                                    return (\n                                        <Menu.Item key={item.id}>\n                                            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                {`${item.broadcaster_name} - ${item.title}`}\n                                            </a>\n                                        </Menu.Item>\n                                    )\n                                })\n                            }\n                        </SubMenu>\n                        <SubMenu key={MenuKey.Clips} icon={<VideoCameraOutlined/>} title=\"Clips\">\n                            {\n                                CLIP.map((item) => {\n                                    return (\n                                        <Menu.Item key={item.id}>\n                                            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                {`${item.broadcaster_name} - ${item.title}`}\n                                            </a>\n                                        </Menu.Item>\n                                    )\n                                })\n                            }\n                        </SubMenu>\n                    </Menu>\n                </Drawer>\n            </div>\n        )\n    }\n}\n\nexport default Favorites","import React from 'react'\nimport {Button, Form, Input, message, Modal} from 'antd'\nimport {SearchOutlined} from '@ant-design/icons'\nimport {searchGameByName} from '../utils'\n\nclass CustomSearch extends React.Component {\n    state = {\n        displayModal: false\n    }\n\n    handleCancel = () => {\n        this.setState({displayModal: false})\n    }\n\n    searchOnClick = () => {\n        this.setState({displayModal: true})\n    }\n\n    onSubmit = (data) => {\n        searchGameByName(data.game_name)\n            .then((data) => {\n                this.setState({displayModal: false})\n                this.props.onSuccess(data)\n            })\n            .catch((err) => {\n                message.error(err.message)\n            })\n    }\n\n    render = () => {\n        return (\n            <div>\n                <Button shape=\"round\" onClick={this.searchOnClick} icon={<SearchOutlined/>}\n                        style={{marginLeft: '20px', marginTop: '20px'}}>\n                    Custom Search\n                </Button>\n                <Modal title=\"Custom Search\" visible={this.state.displayModal} onCancel={this.handleCancel}\n                       footer={null}>\n                    <Form name=\"custom_search\" onFinish={this.onSubmit}>\n                        <Form.Item name=\"game_name\" rules={[{required: true, message: 'Please enter a game name'}]}>\n                            <Input placeholder=\"Game name\"/>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default CustomSearch ","import React from 'react'\nimport {Button, Card, List, message, Tabs, Tooltip} from 'antd'\nimport {StarFilled, StarOutlined} from '@ant-design/icons'\nimport {addFavoriteItem, deleteFavoriteItem} from '../utils'\n\nconst {TabPane} = Tabs\nconst tabKeys = {\n    Streams: 'stream',\n    Videos: 'videos',\n    Clips: 'clips'\n}\n\nconst processUrl = (url) => url\n    .replace('%{height}', '252')\n    .replace('%{width}', '480')\n    .replace('{height}', '252')\n    .replace('{width}', '480')\n\nconst renderCardTitle = (item, loggedIn, favs, favOnChange) => {\n    const title = `${item.broadcaster_name} - ${item.title}`\n\n    const isFav = favs.find((fav) => fav.id === item.id)\n\n    const favOnClick = () => {\n        if (isFav) {\n            deleteFavoriteItem(item).then(() => {\n                favOnChange()\n            }).catch(err => {\n                message.error(err.message)\n            })\n\n            return\n        }\n\n        addFavoriteItem(item).then(() => {\n            favOnChange()\n        }).catch(err => {\n            message.error(err.message)\n        })\n    }\n\n    return (\n        <div>\n            {\n                loggedIn &&\n                <Tooltip title={isFav ? \"Remove from favorite list\" : \"Add to favorite list\"}>\n                    <Button shape=\"circle\" icon={isFav ? <StarFilled/> : <StarOutlined/>} onClick={favOnClick}/>\n                </Tooltip>\n            }\n            <div style={{overflow: 'hidden', textOverflow: 'ellipsis', width: 450}}>\n                <Tooltip title={title}>\n                    <span>{title}</span>\n                </Tooltip>\n            </div>\n        </div>\n    )\n}\n\nconst renderCardGrid = (data, loggedIn, favs, favOnChange) => {\n    return (\n        <List\n            grid={{xs: 1, sm: 1, md: 1, lg: 2, xl: 2, xxl: 3}}\n            dataSource={data}\n            renderItem={item => (\n                <List.Item style={{marginRight: '20px'}}>\n                    <Card title={renderCardTitle(item, loggedIn, favs, favOnChange)}>\n                        <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                            <img alt=\"Placeholder\" src={processUrl(item.thumbnail_url)}/>\n                        </a>\n                    </Card>\n                </List.Item>\n            )}\n        />\n    )\n}\n\nconst Home = ({resources, loggedIn, favoriteItems, favoriteOnChange}) => {\n    const {VIDEO, STREAM, CLIP} = resources\n    const {VIDEO: favVideos, STREAM: favStreams, CLIP: favClips} = favoriteItems\n\n    return (\n        <Tabs defaultActiveKey={tabKeys.Streams}>\n            <TabPane tab=\"Streams\" key={tabKeys.Streams} style={{height: '680px', overflow: 'auto'}} forceRender={true}>\n                {renderCardGrid(STREAM, loggedIn, favStreams, favoriteOnChange)}\n            </TabPane>\n            <TabPane tab=\"Videos\" key={tabKeys.Videos} style={{height: '680px', overflow: 'auto'}} forceRender={true}>\n                {renderCardGrid(VIDEO, loggedIn, favVideos, favoriteOnChange)}\n            </TabPane>\n            <TabPane tab=\"Clips\" key={tabKeys.Clips} style={{height: '680px', overflow: 'auto'}} forceRender={true}>\n                {renderCardGrid(CLIP, loggedIn, favClips, favoriteOnChange)}\n            </TabPane>\n        </Tabs>\n    )\n}\n\nexport default Home","import React from 'react'\nimport {Button, Col, Layout, Menu, message, Row} from 'antd'\nimport Login from './components/Login'\nimport Register from './components/Register'\nimport {getFavoriteItem, getRecommendations, getTopGames, logout, searchGameById} from './utils'\nimport Favorites from './components/Favorites'\nimport {FireOutlined, LikeOutlined} from '@ant-design/icons'\nimport CustomSearch from './components/CustomSearch'\nimport SubMenu from 'antd/lib/menu/SubMenu'\nimport Home from './components/Home'\n\nconst {Header, Content, Sider} = Layout\n\nclass App extends React.Component {\n    state = {\n        loggedIn: false,\n        topGames: [],\n        resources: {\n            VIDEO: [],\n            STREAM: [],\n            CLIP: []\n        },\n        favoriteItems: {\n            VIDEO: [],\n            STREAM: [],\n            CLIP: []\n        }\n    }\n\n    favoriteOnChange = () => {\n        getFavoriteItem()\n            .then((data) => {\n                this.setState({\n                    favoriteItems: data,\n                    loggedIn: true\n                })\n            })\n            .catch((err) => {\n                message.error(err.message)\n            })\n    }\n\n    onGameSelect = ({key}) => {\n        if (key === 'Recommendation') {\n            getRecommendations().then((data) => {\n                this.setState({resources: data})\n            })\n            return\n        }\n\n        searchGameById(key).then((data) => {\n            this.setState({resources: data})\n        })\n    }\n\n    customSearchOnSuccess = (data) => {\n        this.setState({resources: data})\n    }\n\n    signinOnSuccess = () => {\n        getFavoriteItem().then((data) => {\n            this.setState({\n                favoriteItems: data,\n                loggedIn: true\n            })\n        }).catch((err) => {\n            message.error(err.message)\n        })\n    }\n\n    signoutOnClick = () => {\n        logout()\n            .then(() => {\n                this.setState({loggedIn: false})\n                message.success(`Successfull signed out`)\n            })\n            .catch((err) => {\n                message.error(err.message)\n            })\n    }\n\n    componentDidMount = () => {\n        getTopGames()\n            .then((data) => {\n                this.setState({topGames: data})\n            })\n            .catch((err) => {\n                message.error(err.message)\n            })\n    }\n\n    render = () => (\n        <Layout>\n            <Header>\n                <Row justify=\"space-between\">\n                    <Col>\n                        {this.state.loggedIn && <Favorites data={this.state.favoriteItems}/>}\n                    </Col>\n                    <Col>\n                        {\n                            this.state.loggedIn ?\n                                <Button shape=\"round\" onClick={this.signoutOnClick}>Logout</Button> :\n                                (\n                                    <div style={{display: 'flex'}} >\n                                        <Login onSuccess={this.signinOnSuccess}/>\n                                        <Register/>\n                                    </div>\n                                )\n                        }\n                    </Col>\n                </Row>\n            </Header>\n            <Layout>\n                <Sider width={300} className=\"site-layout-background\">\n                    <CustomSearch onSuccess={this.customSearchOnSuccess}/>\n                    <Menu mode=\"inline\" onSelect={this.onGameSelect} style={{marginTop: '10px'}}>\n                        <Menu.Item icon={<LikeOutlined/>} key=\"Recommendation\">Recommend for you!</Menu.Item>\n                        <SubMenu icon={<FireOutlined/>} key=\"Popular Games\" title=\"Popular Games\" className=\"site-top-game-list\">\n                            {\n                                this.state.topGames.map((game) => {\n                                    return (\n                                        <Menu.Item key={game.id} style={{height: '50px'}}>\n                                            <img\n                                                alt=\"Placeholder\"\n                                                src={game.box_art_url.replace('{height}', '40').replace('{width}', '40')}\n                                                style={{borderRadius: '50%', marginRight: '20px'}}\n                                            />\n                                            <span>{game.name}</span>\n                                        </Menu.Item>\n                                    )\n                                })\n                            }\n                        </SubMenu>\n                    </Menu>\n                </Sider>\n                <Layout style={{padding: '24px'}}>\n                    <Content className=\"site-layout-background\">\n                        <Home\n                            resources={this.state.resources}\n                            loggedIn={this.state.loggedIn}\n                            favoriteItems={this.state.favoriteItems}\n                            favoriteOnChange={this.favoriteOnChange}\n                        />\n                    </Content>\n                </Layout>\n            </Layout>\n        </Layout>\n    )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals() \n"],"sourceRoot":""}